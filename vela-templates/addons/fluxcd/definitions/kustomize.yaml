apiVersion: core.oam.dev/v1beta1
kind: ComponentDefinition
metadata:
  name: kustomize
  namespace: vela-system
  annotations:
    definition.oam.dev/description: "kustomize can fetching, building, updating and applying Kustomize manifests from git repo."
spec:
  workload:
    type: autodetects.core.oam.dev
  schematic:
    cue:
      template: |
        output: {
        	apiVersion: "source.toolkit.fluxcd.io/v1beta1"
        	metadata: {
        		name: context.name
        	}
        	if parameter.repoType == "git" {
        		kind: "GitRepository"
        		spec: {
        			url: parameter.url
        			if parameter.git.branch != _|_ {
        				ref: branch: parameter.git.branch
        			}
        			_secret
        			_sourceCommonArgs
        		}
        	}
        	if parameter.repoType == "oss" {
        		kind: "Bucket"
        		spec: {
        			endpoint:   parameter.url
        			bucketName: parameter.oss.bucketName
        			provider:   parameter.oss.provider
        			if parameter.oss.region != _|_ {
        				region: parameter.oss.region
        			}
        			_secret
        			_sourceCommonArgs
        		}
        	}
        }

        _secret: {
        	if parameter.secretRef != _|_ {
        		secretRef: {
        			name: parameter.secretRef
        		}
        	}
        }

        _sourceCommonArgs: {
        	interval: parameter.pullInterval
        	if parameter.timeout != _|_ {
        		timeout: parameter.timeout
        	}
        }

        outputs: kustomize: {
        	apiVersion: "kustomize.toolkit.fluxcd.io/v1beta1"
        	kind:       "Kustomization"
        	metadata: {
        		name: context.name
        	}
        	spec: {
        		interval: parameter.pullInterval
        		sourceRef: {
        			if parameter.repoType == "git" {
        				kind: "GitRepository"
        			}
        			if parameter.repoType == "oss" {
        				kind: "Bucket"
        			}
        			name:      context.name
        			namespace: context.namespace
        		}
        		path:       parameter.path
        		prune:      true
        		validation: "client"
        	}
        }
        parameter: {
        	repoType: *"git" | "oss"
        	// +usage=The interval at which to check for repository/bucket and relese updates, default to 5m
        	pullInterval: *"5m" | string
        	// +usage=The Git or Helm repository URL, OSS endpoint, accept HTTP/S or SSH address as git url,
        	url: string
        	// +usage=The name of the secret containing authentication credentials
        	secretRef?: string
        	// +usage=The timeout for operations like download index/clone repository, optional
        	timeout?: string
        	git?: {
        		// +usage=The Git reference to checkout and monitor for changes, defaults to master branch
        		branch: string
        	}
        	oss?: {
        		// +usage=The bucket's name, required if repoType is oss
        		bucketName: string
        		// +usage="generic" for Minio, Amazon S3, Google Cloud Storage, Alibaba Cloud OSS, "aws" for retrieve credentials from the EC2 service when credentials not specified, default "generic"
        		provider: *"generic" | "aws"
        		// +usage=The bucket region, optional
        		region?: string
        	}
        	//+usage=Path to the directory containing the kustomization.yaml file, or the set of plain YAMLs a kustomization.yaml should be generated for.
        	path: string
        	// +usage=a list of StrategicMerge or JSON6902 patch to selected target
        	patches?: [...#patchItem]
        	// +usage=A list of strategicMerge, defined as inline YAML objects.
        	patchesStrategicMerge?: [...#nestedmap]
        	// +usage=A list of JSON6902 patch.
        	patchesJson?: [...#jsonPatchItem]
        }

        #nestedmap: {
        	...
        }

        // +usage=Contains a strategicMerge or JSON6902 patch
        #patchItem: {
        	// +usage=Inline patch string, in yaml style
        	patch: string
        	// +usage=Specify the target the patch should be applied to
        	target: #selector
        }

        // +usage=Contains a JSON6902 patch
        #jsonPatchItem: {
        	target: #selector
        	patch: {
        		op:     string
        		path:   string
        		value?: string
        	}
        }

        // +usage=Selector specifies a set of resources
        #selector: {
        	group?:              string
        	version?:            string
        	kind?:               string
        	namespace?:          string
        	name?:               string
        	annotationSelector?: string
        	labelSelector?:      string
        }
