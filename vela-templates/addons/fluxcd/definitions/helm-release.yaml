apiVersion: core.oam.dev/v1beta1
kind: ComponentDefinition
metadata:
  name: helm
  namespace: vela-system
  annotations:
    definition.oam.dev/description: "helm release is a group of K8s resources from either git repository or helm repo"
spec:
  workload:
    type: autodetects.core.oam.dev
  schematic:
    cue:
      template: |
        output: {
        	apiVersion: "source.toolkit.fluxcd.io/v1beta1"
        	metadata: {
        		name: context.name
        	}
        	if parameter.repoType == "git" {
        		kind: "GitRepository"
        		spec: {
        			url: parameter.repoUrl
        			ref:
        				branch: parameter.branch
        			interval: parameter.pullInterval
        		}
        	}
        	if parameter.repoType == "helm" {
        		kind: "HelmRepository"
        		spec: {
        			interval: parameter.pullInterval
        			url:      parameter.repoUrl
        			if parameter.secretRef != _|_ {
        				secretRef: {
        					name: parameter.secretRef
        				}
        			}
        		}
        	}
        	if parameter.repoType == "bucket" {
        		kind: "Bucket"
        		spec: {
        			interval: parameter.pullInterval
        			provider: parameter.provider
        			endpoint: parameter.endpoint
        			bucketName: parameter.bucketName
        			if parameter.region != _|_ {
        				region: parameter.region
        			}
        			if parameter.timeout != _|_ {
        				timeout: parameter.timeout
        			}
        			if parameter.secretRef != _|_ {
        				secretRef: {
        					name: parameter.secretRef
        				}
        			}
        		}
        	}
        }

        outputs: release: {
        	apiVersion: "helm.toolkit.fluxcd.io/v2beta1"
        	kind:       "HelmRelease"
        	metadata: {
        		name: context.name
        	}
        	spec: {
        		interval: parameter.pullInterval
        		chart: {
        			spec: {
        				chart:   parameter.chart
        				version: parameter.version
        				sourceRef: {
        					if parameter.repoType == "git" {
        						kind: "GitRepository"
        					}
        					if parameter.repoType == "helm" {
        						kind: "HelmRepository"
        					}
        					if parameter.repoType == "bucket" {
        						kind: "Bucket"
        					}
        					name:      context.name
        					namespace: context.namespace
        				}
        				interval: parameter.pullInterval
        			}
        		}
        		if parameter.targetNamespace != _|_ {
        			targetNamespace: parameter.targetNamespace
        		}
                if parameter.releaseName != _|_ {
        			releaseName: parameter.releaseName
        		}

        		if parameter.values != _|_ {
        			values: parameter.values
        		}
        	}
        }

        parameter: {
        	// +usage=The type of source of chart. Enum of git/helm/bucket
        	repoType: "git" | "helm" | "bucket"
        	// +usage=The Git or Helm repository URL, accept HTTP/S or SSH address as git url
        	repoUrl: string
        	// +usage=The interval at which to check for repository/bucket and relese updates
        	pullInterval: *"5m" | string
        	// +usage=The bucket's name, required if repoType is bucket
        	bucketName?: string
        	// +usage="generic" for Minio, Amazon S3, Google Cloud Storage, Alibaba Cloud OSS, "aws" for retrieve credentials from the EC2 service when credentials not specified, default "generic"
        	provider?: *"generic" | "aws"
        	// +usage=Bucket endpoint address, required if repoType is bucket
        	endpoint?: string
        	// +usage=The bucket region, optional
        	region?: string
        	// +usage=The timeout for download operations
        	timeout?: string
        	// +usage=1.The relative path to helm chart for git/bucket source. 2. chart name for helm resource 3. relative path for chart package(e.g. ./charts/podinfo-1.2.3.tgz)
        	chart: string
        	// +usage=Chart version
        	version: *"*" | string
        	// +usage=The Git reference to checkout and monitor for changes, defaults to master branch
        	branch: *"master" | string
        	// +usage=The name of the secret containing authentication credentials for Helm repository or bucket
        	secretRef?: string
        	// +usage=The namespace for helm chart
        	targetNamespace?: string
        	// +usage=Chart version
        	value?: #nestedmap
            // +usage=The release name
            releaseName?: string
        }

        #nestedmap: {
        	...
        }